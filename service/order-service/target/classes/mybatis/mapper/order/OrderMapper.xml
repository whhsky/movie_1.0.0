<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.movie.order.mapper.OrderMapper">
    <resultMap id="OrderMap" type="com.order.domain.entity.Order">
        <result column="order_id" jdbcType="BIGINT" javaType="java.lang.Long" property="orderId"/>
        <result column="order_price" jdbcType="DECIMAL" property="orderPrice"/>
        <result column="user_id" jdbcType="DECIMAL" property="userId"/>
        <result column="user_phone" jdbcType="BIGINT" property="userPhone"/>
        <result column="movies_cinema_id" jdbcType="BIGINT" property="moviesCinemaId"/>
        <result column="seat_ids" property="seatIds"
                javaType="java.util.List"
                typeHandler="com.order.domain.entity.MyJsonTypeHandler"
        />
        <result column="seat_id_list" jdbcType="VARCHAR" property="seatIdList"/>
        <result column="order_status" jdbcType="BIGINT" property="orderStatus"/>
        <result column="order_if_pay" jdbcType="VARCHAR" property="orderIfPay"/>
        <result column="pay_time" jdbcType="TIMESTAMP" property="payTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>

    <sql id="order">
        order_id,
        order_price,
        user_id,
        user_phone,
        movies_cinema_id,
        seat_ids,
        seat_id_list,
        order_status,
        pay_time,
        order_if_pay,
        create_time
    </sql>
    <select id="getUserOrderList" resultMap="OrderMap">
        select <include refid="order"/> from `order`
        <where>
            <if test="orderId != null">
                order_id = #{orderId}
            </if>
            and user_id = #{userId}
        </where>
    </select>

    <select id="getUserOrder" resultMap="OrderMap">
        select <include refid="order"/> from `order`
        where order_id = #{orderId} and user_id = #{userId}

    </select>

    <insert id="createOrder" parameterType="com.order.domain.entity.Order">
        insert into
        `order`(order_id, order_price, order_if_pay, user_id, movies_cinema_id, seat_ids, user_phone, seat_id_list,create_time, update_time)
        values (#{orderId},
                #{orderPrice},
                #{orderIfPay},
                #{userId},
                #{moviesCinemaId},
                #{seatIds, jdbcType=OTHER, typeHandler=com.order.domain.entity.MyJsonTypeHandler},
                #{userPhone},
                #{seatIdList},
                #{createTime},
                #{updateTime})
    </insert>

    <delete id="DeleteOrder">
        delete from `order`
        where order_id = #{orderId} and user_id = #{userId}
    </delete>

    <update id="updateOrder" parameterType="com.order.domain.entity.Order">
        update `order` set
        <trim suffixOverrides=",">
           <if test="orderIfPay != null">
                order_if_pay = #{orderIfPay},
            </if>
            <if test="orderStatus != null">
                order_status = #{orderStatus},
            </if>
            <if test="payTime != null">
                pay_time = #{payTime},
            </if>
            update_time = #{updateTime}
        </trim>
        where user_id = #{userId} and order_id = #{orderId}
    </update>

</mapper>